server:
  port: 8000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: gateway-server
  cloud:
    gateway:
        routes:
          - id: 1st-service
#            uri: http://localhost:51125/

            # 로드밸런싱(마이크로 서비스의 이름으로 라우팅을 도와줌)으로 변경, 라우팅 할 주소(uri)
            uri: lb://MY-1ST-SERVICE

            # 로드밸런싱(마이크로 서비스의 이름으로 라우팅을 도와줌)으로 변경, 라우팅 할 주소(uri)
            predicates:
              - Path=/first-service/**

            # Global, Custom 등의 필터를 추가하는 부분
#          # (request 및 response header에 값 추가, segment를 제외한 경로 제거)
            filters:
              - AddRequestHeader=first-request, first-request-header      # 메모. Headers = {key, value}
              - AddResponseHeader=first-response, first-response-header
              - RewritePath=/first-service/(?<segment>.*), /$\{segment}
          - id: 2nd-service
#            uri: http://localhost:51354/
            uri: lb://MY-2ND-SERVICE
            predicates:
              - Path=/second-service/**
            filters:
              - AddRequestHeader=second-request, second-request-header
              - AddResponseHeader=second-response, second-response-header
              - RewritePath=/second-service/(?<segment>.*), /$\{segment}
#spring:
#  application:
#    name: gateway-server
#  cloud:
#    gateway:
#      routes:      # discoveryservice에 등록이 되었고 routing을 해주었기 때문에 실행ㄷ ㅚㅁ
#        - id: user-service
#          uri: lb://SWCAMP-USER-SERVICE
#          predicates:
#            - Path=/user-service/**
#          filters:
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
